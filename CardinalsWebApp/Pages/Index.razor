@page "/"

<PageTitle>Lowell Web App</PageTitle>

<div id="container">
	<h2 class="primary">@now.ToString("hh:mm:ss tt")</h2>

    <div id="date-selector">
        <button class="clear" onclick=@(() => {selected = selected.AddDays(-1);})>
            <span class="material-symbols-outlined text-white">navigate_before</span>
        </button>
        <Card>
            <Content>
                <p class="primary" id="date-shower">@selected</p>
            </Content>
        </Card>
        <button class="clear" onclick=@(() => {selected = selected.AddDays(1);})>
            <span class="material-symbols-outlined text-white">navigate_next</span>
        </button>
    </div>

	<h1 class="primary">@selected.DayOfWeek</h1>

    <h2 class="primary">@selected.ToString("MMMM dd, yyyy")</h2>
    @if(ScheduleProvider.NoSchool(selected)) {
        <h3 class="primary">No School!</h3>
    }
    else {
        <div class="container">
            @foreach(var periodBase in schedule.Periods) {
                if(periodBase is Period period) {
                    <div class="border-none rounded-md shadow-lg mb-2 p-2 relative">
                        <h2 class="primary">@period.Name</h2>
                        <p class="secondary">@period.StartTime&ndash;@period.EndTime</p>
                    </div>
                }
                if(periodBase is Lunch lunch) {
                    <div class="border-none rounded-md shadow-lg mb-2 p-2 relative lunch">
                        <div class="lunch-slot">
                            @{period = lunch.A.First;}
                            <div class="period">
                                <h4 class="primary">@period.Name</h4>
                                <p class="secondary">@period.StartTime&ndash;@period.EndTime</p>
                            </div>
                            @{period = lunch.A.Second;}
                            <div class="period">
                                <h4 class="primary">@period.Name</h4>
                                <p class="secondary">@period.StartTime&ndash;@period.EndTime</p>
                            </div>
                        </div>
                        <hr size id="lunch-divider">
                        <div class="lunch-slot">
                            @{period = lunch.B.First;}
                            <div class="period">
                                <h4 class="primary">@period.Name</h4>
                                <p class="secondary">@period.StartTime&ndash;@period.EndTime</p>
                            </div>
                            @{period = lunch.B.Second;}
                            <div class="period">
                                <h4 class="primary">@period.Name</h4>
                                <p class="secondary">@period.StartTime&ndash;@period.EndTime</p>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    }
    @if (ScheduleProvider.Is2022Summer(selected)) {
        <button id="jump" class="primary" onclick=@(() => {selected = ScheduleProvider.summer2022End;})>Jump to school year</button>
    }

</div>


@code{

    DateTime now;
    DateOnly selected;
    Timer? timer;
    Schedule schedule => ScheduleProvider.GetSchedule(selected);
    protected override void OnInitialized() {
        selected = DateOnly.FromDateTime(DateTime.Now);
        timer = new Timer(Tick, null, 0, 1000);
    }

    private void Tick(object? _) {
        now = DateTime.Now;
        InvokeAsync(StateHasChanged);
    }

    public void Dispose() {
        timer?.Dispose();
    }
}